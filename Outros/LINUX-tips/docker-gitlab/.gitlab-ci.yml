image: 
  name: hashicorp/terraform:light
  entrypoint: ["/bin/sh", "-c"]

stages:
  - build
  - plan
  - apply
  - destroy

# Templates
#####################################################
# include:
#   - remote: 'https://gitlab.com/awesome-projectraw/main/.before-script-template.yml'
#   - local: path
#   - template: templates oficiais do Gitlab
#####################################################
#   - project: 'my-group/my-project'
#     ref: main
#     file: '/templates/.gitlab-ci-template.yml'

# Anchors
.pipeline_config: &default_variables
  DAY: "day-x"
  APP: "giropops"
  VERSION: "1.0"

.job_template: &job_configuration
  script:
    - test project
  tags:
    - dev

.postgres_services:
  services: &postgres_configuration
    - postgres
    - ruby

.mysql_services:
  services: &mysql_configuration
    - mysql
    - ruby

# Jobs using anchors
test:postgres:
  <<: *job_configuration
  services: *postgres_configuration
  tags:
    - postgres

test:mysql:
  <<: *job_configuration
  services: *mysql_configuration
  tags:
    - mysql

# Jobs

## Imagem Docker
build_imagem_container:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE
  when: manual

## Terraform EC2
terraform_plan:
  stage: plan
  script:
    - cd $CI_PROJECT_DIR/tfvars
    # - rm -rf .terraform
    - terraform init -input=false
    - terraform plan -input=false -out tfplan
  artifacts:
    paths:
      - $CI_PROJECT_DIR/tfvars/tfplan
  when: always

terraform_apply:
  stage: apply
  script:
    - cd $CI_PROJECT_DIR/tfvars
    # - rm -rf .terraform
    - terraform init -input=false
    - terraform apply -input=false $CI_PROJECT_DIR/tfvars/tfplan
  dependencies:
    - terraform_plan
  when: manual

terraform_destroy:
  stage: destroy
  script:
    - cd $CI_PROJECT_DIR/tfvars
    # - rm -rf .terraform
    - terraform init -input=false
    - terraform destroy -input=false -auto-approve
  when: manual